https://chatgpt.com/c/68125e19-2ed0-800c-a1be-0293783ba624 


***Linux for DevOps***

apt update
apt upgrade

what is /bin folder
The /bin folder in Linux stands for "binary" and contains essential command-line binaries (executable programs) that are needed for the system to boot and run in single-user mode.
Key points:
It holds essential user commands, like:
ls (list directory contents)
cp (copy files)
mv (move/rename files)
rm (remove files)
bash (Bourne Again Shell)
These commands are available to all users, including during system recovery or when no other filesystems are mounted.





what is /sbin folder
The /sbin folder stands for "system binary" and contains essential system administration commands — mostly used by the root (superuser) for system maintenance and recovery.
Key points:
It includes commands like:
ifconfig (configure network interfaces)
reboot (restart the system)
fsck (file system check)
iptables (firewall rules)
These are not typically used by regular users.
Like /bin, it's critical during booting and single-user mode.





what is /dev folder
The /dev folder in Linux stands for "device" and contains device files that represent hardware and virtual devices attached to the system.
Key points:
Devices are treated like files in Linux — this is called "everything is a file" philosophy.
Common entries:
/dev/sda → first hard disk
/dev/tty → terminal devices
/dev/null → data sink (discard everything written to it)
/dev/zero → provides unlimited null bytes (0s)
/dev/random → provides random numbers
These files are mostly created dynamically by the udev device manager during boot or when devices are connected.






what is /var folder
The /var directory in Linux stands for "variable" and contains files that change frequently while the system is running.
Key contents:
/var/log/ → log files (e.g., system logs, app logs)
/var/mail/ → user mailbox files
/var/spool/ → queues for tasks like printing or cron jobs
/var/tmp/ → temporary files preserved between reboots
/var/cache/ → cached data for apps to speed things up
Think of /var as the writable counterpart to the mostly static /etc or /bin.







what is /mnt folder
The /mnt directory in Linux stands for "mount" and is used as a temporary mount point for mounting external storage devices like USB drives, hard disks, or network shares.
Key points:
You can manually mount a device to /mnt, like:
sudo mount /dev/sdb1 /mnt
It's often used by system administrators for manual, short-term mounts.
For permanent mounts, custom directories under /mnt or /media are often used.





what is /media folder
The /media directory in Linux is used for automatically mounting external media like USB drives, CDs, DVDs, or SD cards, typically when a user plugs them in.
Key points:
Modern Linux systems (like Ubuntu) auto-mount devices to /media/<username> :Example: /media/prince/MyUSB
Unlike /mnt (used for manual mounts), /media is used for auto-mounted removable devices handled by the desktop environment or udisks.






what is /usr folder
The /usr directory in Linux stands for "Unix System Resources" and contains user-related programs and data — not user files, but system-wide read-only software and libraries for normal (non-boot-critical) operations.
Key contents:
/usr/bin/ → non-essential user commands (e.g., gcc, python)
/usr/sbin/ → non-essential system admin commands (e.g., apache2)
/usr/lib/ → libraries for binaries in /usr/bin and /usr/sbin
/usr/share/ → architecture-independent files (e.g., docs, icons)
/usr/local/ → for software installed manually by the user
💡 Note: Unlike /bin and /sbin, /usr/bin and /usr/sbin are not needed during early boot.







what is /etc folder
The /etc directory in Linux contains system-wide configuration files and shell scripts used to configure the system and its applications.
Key points:
All files are usually text-based config files.
Examples:
/etc/passwd → user account info
/etc/fstab → file system mount config
/etc/hostname → system hostname
/etc/ssh/sshd_config → SSH server settings
Only root or sudo users typically modify /etc.











what is /boot folder
The /boot directory in Linux contains all the files needed to boot the system, including the Linux kernel, initial RAM disk, and bootloader configuration files.
Key contents:
/boot/vmlinuz-* → compressed Linux kernel
/boot/initrd.img-* → initial RAM disk (used during boot to load drivers before root filesystem is available)
/boot/grub/ → GRUB bootloader configuration files
/boot/config-* → kernel configuration settings
This folder is usually on the root partition, but on some systems (like UEFI setups), it may be a separate partition.







what is /opt folder
The /opt directory in Linux stands for "optional" and is used to install third-party software packages that are not managed by the system's package manager.
Key points:
Software installed here usually lives in its own subdirectory, e.g.:
/opt/google/ → Google Chrome
/opt/vscode/ → Visual Studio Code
Good place for manually downloaded apps or proprietary software.
Keeps custom or vendor software separate from system files.
💡 Tip: You often need sudo to install to or modify anything in /opt.






what is /home folder
The /home directory in Linux contains personal directories for all regular (non-root) users, where each user can store their own files, settings, and data.
Key points:
Example: For a user named prince, their home directory is /home/prince
Inside /home/prince, you'll find:
Documents, Downloads, Pictures, etc.
Hidden config files like .bashrc, .gitconfig
Each user has full control over their own home directory.
💡 The superuser (root) has a separate home: /root




what is /tmp folder
/tmp in Linux:
The /tmp directory is used for temporary files created by applications and the system. These files are:
Short-lived — can be deleted at reboot
Accessible to all users (with some permissions restrictions)
Often used for:
Temporary download files
Sockets and pipes
Lock files





for create single directories
mkdir folder_name 
ex-> mkdir DevOps

to deleted single directory
rm -r folder_name or rmdir folder_name

to create multiple directories
mkdir folder_name1 folder_name2 folder_name3 
ex-> mkdir DevOps1 DevOps2 DevOps3

to deleted multiple directories
rm -r folder_name1 folder_name2 folder_name3 or rmdir folder_name1 folder_name2 folder_name3

To create a folder inside another folder
mkdir folder_name1/folder_name2/folder_name3
ex-> mkdir DevOps1/DevOps2/DevOps3  (If parent does not exist, this will give an error)
mkdir -p parent/child (parent will be created if does not exist)

to create numbers of folders
mkdir prince{1..10}

to deleted numbers of folders
rm -r prince{1..10}


Create single file with touch command
touch file_name
ex-> touch DevOps.txt

to create multiple files
touch file_name1 file_name2 file_name3
ex-> touch DevOps1 DevOps2 DevOps3

to deleted single file
rm file_name

to deleted multiple files
rm DevOps1 DevOps2 DevOps3

pwd -> Print Working Directory

to see the data in a file
cat file_name

to write the data in file
cat > file_name
Then type your content, press Enter after each line, and press Ctrl + D to save and exit.
or
nano file.txt
This opens a simple text editor.
Type your content.
Press Ctrl + O to save, then Enter.
Press Ctrl + X to exit.
or
echo "Hello World" > file.txt  (if file does not exist, it will be created)

to append the data in file
echo "your text here" >> filename.txt
or 
cat >> notes.txt
Now type your lines and press Ctrl + D to finish.
or
nano filename.txt
Move the cursor to the end of the file using the arrow keys.
Type the text you want to append.
Press Ctrl + O to save the changes.
Press Enter to confirm the file name.
Press Ctrl + X to exit.
or
vim filename.txt
Press G to go to the end of the file.
Press i to start inserting text.
Type the content you want to append.
Press Esc to exit insert mode.
Type :wq and press Enter to save and quit.






✅ Print top n lines:
head -n 5 filename.txt

✅ Print bottom n lines:
tail -n 5 filename.txt


to get the upcoming changes in a file
tail -f filename.txt


The less and more commands in Linux are used to view large text files page by page in the terminal.

less – modern and more powerful
less filename.txt
Scroll down with: Down Arrow, Enter, or Space
Scroll up with: Up Arrow or b
Search: Press /, type keyword, then Enter
Quit: Press q

more – older and less powerful
more filename.txt
Scroll down: Space or Enter
No scroll up (older limitation)
Quit: Press q


Copy a file from one location to another
cp source_file destination_file
ex-> cp prince/file.txt prince2

copy recursively a folder from one location to another
cp -r source_folder destination_folder
ex-> cp -r prince prince2


to move a file from one location to another
mv source_file destination_file
ex-> mv prince/file.txt prince2

to move a folder from one location to another
mv source_folder destination_folder
ex-> mv prince prince2

move recursively a folder from one location to another
mv -r source_folder destination_folder
ex-> mv -r prince prince2

to count the number of lines, words, and characters in a file
wc filename.txt

to count the number of lines in a file
wc -l filename.txt

to count the number of words in a file
wc -w filename.txt

to count the number of characters in a file
wc -c filename.txt




🔗 Hard Link
✅ Definition:
A hard link is an additional name for an existing file. Both the original and the hard link point to the same inode (i.e., same data on disk).
ln /home/ubantu/devops/cloud/dev.txt hardLinkFile
Shares the same data/inode.
If the original file is deleted, the hard link still works.
Can only be created for files, not directories.
Must be on the same filesystem.


🔗 Soft Link (Symbolic Link)
✅ Definition:
A soft link (or symlink) is a shortcut or reference to another file path.
ln -s original.txt symlink.txt
ln -s /home/ubantu/devops/cloud/dev.txt softLinkFile
Stores the path to the target file, not the data.
Breaks if the original file is deleted or moved.
Can link to files or directories.
Works across filesystems.


🔗 Cut
✅ Definition:
Cut and display bytes 1 to 4 from each line of file.txt.
cut -b 1-3 filename.txt


🔗 tee
✅ Definition:
The tee command in Linux is used to read from standard input and write to both a file and the terminal at the same time.
echo "Hello Prince" | tee file.txt
✅ To append instead of overwrite:
echo "Hello Prince" | tee -a file.txt

🔗 Sort
✅ Definition:
The sort command in Linux is used to sort lines of text files.
sort filename.txt


🔗 diff
✅ Definition:
The diff command in Linux is used to compare the differences between two files.
diff file1.txt file2.txt



🔗 ssh
✅ Definition:The ssh (Secure Shell) command is used to securely connect to a remote Linux machine/server over a network.
ssh username@hostname
username = your user account on the remote system
hostname = IP address or domain name of the remote system
then inter password
To disconnect from an SSH session, simply type: exit


🔗 df
✅ Definition:
The df command in Linux is used to display disk usage information.
df
df -h

🔗 du
The du (disk usage) command in Linux is used to check how much space files and directories are using.
du .  or du foldername
du -h .  or du -h foldername


🔗 ps
✅ Definition: The ps command in Linux is used to display currently running processes on the system.
ps 
🔧 Common Options:
Option	Description
-e or -A	Show all processes
-f	Full format (with PPID, UID, etc.)
-u user	Show processes for a specific user
-x	Show processes not attached to a terminal
-aux	Legacy format to show all running processes



🔗 top
The top command in Linux is used to monitor real-time system processes, showing CPU and memory usage dynamically.
top
✅ What top Shows:
PID (Process ID)
USER (Owner of the process)
%CPU (CPU usage)
%MEM (Memory usage)
COMMAND (Name of the process)


🔗 fuser
 Show which processes are using a file, port, or filesystem
 🧪 Example 1: Who is using a file?
fuser filename.txt
🧪 Example 2: Who is using port 80?
fuser -n tcp 80



🔗 kill:
✅ Definition: Terminate a process by PID
kill PID  (basic kill)
kill -9 PID  (force kill)



🔗 free
The free command in Linux is used to display the amount of free and used memory in the system, including RAM and swap space.
free
🔧 Common Options:
Option	Description
-h Display memory usage in human-readable format
-m	Display memory usage in megabytes
-k	Display memory usage in kilobytes


🔗 nohup
✅ Definition:to store processes in the file nohup.out
nohup command




🔗 vmstat
The vmstat (Virtual Memory Statistics) command in Linux provides information about processes, memory, paging, block IO, traps, and CPU activity.
vmstat
vmstat -a






 uname
 The uname command in Linux is used to display system information such as the kernel name, version, and architecture.
 uname

 uptime
 The uptime command in Linux shows how long the system has been running, along with the number of users currently logged in and the system load averages for the past 1, 5, and 15 minutes.

 date
 The date command in Linux is used to display or set the current date and time.


 ✅ who
Displays a list of users currently logged into the system.
who
Output:ubantu   tty1   2025-05-02 09:23
Breakdown:
ubantu: Username
tty1: Terminal
2025-05-02 09:23: Login time


✅ whoami
Displays your current username (i.e., the user executing the command).
whoami


🔗 which
 The which command in Linux is used to locate the executable path of a command by searching the directories listed in the user's PATH environment variable.


🔗 id
 The id command in Linux is used to display user ID (UID), group ID (GID), and group memberships for the current user or a specified user.


🔗 sudo
 The sudo command in Linux stands for "superuser do" — it allows a permitted user to run commands as the superuser (root) or another user, as defined in the sudoers configuration.
 sudo <command>
 ex-> sudo shutdown , sudo apt update
🔐 Why Use sudo?
To perform tasks like installing software, modifying system files, restarting services, etc.
It logs actions and restricts access to sensitive operations.



🔗 shutdown
The shutdown command in Linux is used to turn off, restart, or halt the system safely.
sudo shutdown 
📘 Common Examples:
Command	Description
sudo shutdown now	Shuts down the system immediately
sudo shutdown +5	Shuts down the system in 5 minutes
sudo shutdown -r now	Reboots the system immediately
sudo shutdown -h now	Halts (powers off) the system now
sudo shutdown -c	Cancels a scheduled shutdown




🔗 reboot 
The reboot command in Linux is used to restart the system.
sudo reboot

passwd
To change your password in Linux, use the passwd command.



ctr + r
to serch a command that we have run before



🔗 docker (install any applications)
sudo apt-get install docker.io 


🔗 docker (uninstall)
sudo apt-get remove docker.io


for differnet flavour of os
Ubuntu/Debian -> apt
Centos/Redhat -> yum
Fedora -> dnf
Arch Linux -> pacman









User and Group management commands

add user
sudo useradd -m john
sudo passwd john
or 
sudo adduser newusername
sudo adduser john


✅ 1. Switch User (Using su):
su - username
su - john
exit-> logout and go back to root user

To delete a user in Linux, use the userdel command.
sudo userdel -r username
sudo userdel -r john

to get the all users
cat /etc/passwd

get all groups
cat /etc/group

To add a new group in Linux, use the groupadd command.
sudo groupadd groupname
sudo groupadd devteam

To delete a group in Linux, use the groupdel command.
sudo groupdel groupname


To add a user to a group , use the gpasswd command.
sudo gpasswd -a prince1 devops

to add multiple users in group
sudo gpasswd -a user1 user2 user3 devops


File permissions commands in Linux

🔗 ls -l 
The command ls -l is used to list files and directories in long (detailed) format in Linux.
$ ls -l
-rw-r--r--  1 user  user   1234 May  2 12:00 file.txt
drwxr-xr-x  2 user  user   4096 May  2 12:01 folder/
🔍 What the columns mean:
Field	Description
- or d	File type (- = file, d = directory)
rw-r--r--	File permissions
1	Number of hard links
user	File owner
user	Group owner
1234	File size in bytes
May 2 12:00	Last modified date/time
file.txt	File or directory name
🧩 Breakdown of rw-r--r--:
Section	Characters	Meaning
Owner	rw-	Read + Write (no execute)
Group	r--	Read only
Others	r--	Read only
🎯 Each group of 3:
r = read
w = write
x = execute
- = permission not granted

permission     value      ascii value
---              0            000
--x              1            001 
-w-              2            010
-wx              3            011
r--              4            100
r-x              5            101
rw-              6            110
rwx              7            111

ex-> 
-rw-r--r--  ->  644
-rwxr-xr-x  ->  755



🔗 chmod
The chmod command in Linux is used to change the permissions of files and directories.
chmod 755 file1.txt



🔗 umask
The umask (user file-creation mode mask) defines default permissions for newly created files and directories in Linux.



✅ Temporarily (for current session):
umask 0022
This changes the default permission mask until you close the terminal.


✅ Permanently (for all future sessions):bashrc
umask 0022
echo "umask 0022" >> ~/.bashrc
source ~/.bashrc



🔗 chown
The chown command in Linux is used to change the owner and group ownership of files and directories.
sudo chown username file1.txt


🔗 chgrp
The chgrp command in Linux is used to change the group ownership of files and directories.
sudo chgrp devops demofile.txt


🔗 zip
The zip command in Linux is used to create a compressed archive of multiple files or directories.
sudo apt install zip
🔹Zip a single file: zip myfile.zip file.txt
🔹Zip multiple files: zip myarchive.zip file1.txt file2.txt image.png
🔹Zip a directory recursively: zip -r myfolder.zip myfolder
🔹Zip with password: zip -e secure.zip file.txt
                    : zip -er secure.zip foldername

📦 To unzip: unzip archive.zip



🔗 gunzip
The gunzip command is used to decompress .gz (gzip) files in Linux.

🔗 tar-cvzf
The tar command is used to create and extract archive files in Linux.
tar -cvzf cloud.tar.gz cloud


🔗 tar -xvzf
The tar command is used to extract archive files in Linux.
tar -xvzf cloud.tar.gz


🔗 scp
The scp command in Linux is used to copy files from one server to another.
scp source_file destination_server:destination_folder
ex-> scp -i "/Users/prince/Downloads/1inux-for-devops-key.pem" secretFile.txt ubantu@ec2-34-234-234-234.us-west-2.compute.amazonaws.com:/home/ubantu


🔗 rsync
The rsync command in Linux is used to synchronize files between two servers.
rsync -avz source_server:source_folder destination_server:destination_folder




networking for devops

🔗 ifconfig
The ifconfig (interface configuration) command is used to view and configure the network interfaces on a Linux system. It displays IP addresses, MAC addresses, and status of each network interface.

🔗 ping
The ping command tests the reachability of a host on a network by sending ICMP echo request packets and measuring the response time. It helps diagnose network connectivity issues.
ping google.com

🔗 netstat
The netstat (network statistics) command displays active network connections, listening ports, routing tables, and network interface statistics. It is useful for monitoring network performance and troubleshooting.

🔗 traceroute
The traceroute command traces the path that packets take to reach a remote host, showing all the intermediate hops and the time taken at each step. It helps identify where delays or failures are happening in the network.
traceroute google.com

🔗 tracepath
The tracepath command is used to trace the path packets take to reach a network host, similar to traceroute, but without needing superuser (root) privileges. It reports each hop along the route and the delay at each hop.
tracepath google.com


🔗 mtr (My Traceroute)
The mtr command combines the functionality of ping and traceroute into a single real-time network diagnostic tool. It continuously traces the route to a destination and provides dynamic, real-time statistics like packet loss and latency at each hop.


🔗 nslookup
The nslookup (Name Server Lookup) command is used to query Domain Name System (DNS) servers to obtain domain name or IP address mapping, or for any other specific DNS record.
Key Features:
Finds the IP address of a domain name.
Finds the domain name associated with an IP.
Helps troubleshoot DNS-related issues.
Example (to find IP of domain):
nslookup google.com



🔗 telnet
The telnet command is a network protocol and command-line tool used to connect to remote machines over TCP/IP. It allows users to test connectivity to specific ports and manually interact with text-based network services.

✅ Uses of telnet:
Testing if a port is open on a remote server.
Manually interacting with protocols like HTTP, SMTP, FTP, etc.
Simple troubleshooting of network and firewall issues.
📌 Basic Syntax:
telnet [hostname or IP] [port]
💡 Example:
telnet google.com 80


🔗 hostname
The hostname command in Linux is used to display or set the system's hostname — the name that identifies the system on a network.


🔗 hostnamectl 
The hostnamectl command in Linux is used to display or set the system's hostname — the name that identifies the system on a network.
ex-> sudo hostnamectl set-hostname dev-machine


🔗 ip
In Linux, the ip command is used to view and manipulate networking, routing, devices, and tunnels. It replaces older tools like ifconfig.
ex-> ip addr 


🔗 iwconfig
The iwconfig command in Linux is used to configure wireless network interfaces.
ex-> iwconfig


🔗 ss
The ss command in Linux is used to display network statistics and information about network connections.
ex-> ss


🔗 dig
The dig command in Linux is used to query DNS servers and perform DNS lookups.
ex-> dig google.com


🔗 whois
The whois command in Linux is used to retrieve information about a domain name or IP address.
ex-> whois google.com


🔗 arp
The arp command in Linux is used to view and manipulate the ARP (Address Resolution Protocol) cache, which maps IP addresses to MAC (hardware) addresses on a local network.
ex-> arp


🔗 ifplugstatus
The ifplugstatus command checks the status of a network cable (whether it is plugged in or not) for a given network interface.
ifplugstatus 


🔗 curl
Use curl for APIs, single file transfers, or scripting uploads/downloads.
ex-> curl https://dummyjson.com/products 
in the formated json
ex-> curl https://dummyjson.com/products | jq 


🔗 wget
Use wget for downloading files and websites.
ex-> wget https://dummyjson.com/products


🔗 iptables
Used to set up, maintain, and inspect the Linux kernel's packet filtering rules.
Core tool for configuring firewall rules.
sudo iptables -L


🔗 watch
The watch command in Linux is used to run a command repeatedly at regular intervals and show the output on the terminal. It's helpful for monitoring changes in system status or output over time.
ex-> watch uptime
ex-> watch -n 1 uptime



🔗 nmap
The nmap command in Linux is used to perform network scans and vulnerability assessments.
ex-> nmap google.com


🔗 route
The route command in Linux is used to display and modify the routing table.
ex-> route



🔗 awk 
The awk command in Linux is used to process text files line by line(structured data).
ex-> awk '{print $2}' filename.txt
ex-> awk '{print $1,$2}' app.log
ex-> awk '{print $1,$2,$3,$5}' app.log
ex-> awk '/INFO/{print $1,$2,$3,$5}' app.log  >  only_info.log
ex-> awk '/INFO/ {count++} END {print "the count of INFO is: " count}' app.log
awk '$2 >= "08:51:01" && $2 <= "08:51:04" {print $2}' app.log
awk '$2 >= "08:51:01" && $2 <= "08:51:04" {print $2,$3}' a pp.log
awk 'NR == 5 {print}' app.log
awk 'NR >=2 && NR <= 10 {print}' app.log


🔗 sed
The sed command in Linux is used to perform stream editor operations on text files(unstructured data).
sed -n '/INFO/p' app.log
sed 's/INFO/LOG/g' app.log
sed -n '/INFO/ {=; p}' app.log
sed -n '/INFO/ {=; p}' app.log | awk '{print $1}'
sed -n '/INFO/ {=; p}' app.log | awk '{print $1,$3}'
sed '1,10 s/INFO/LOG/g' app.log


🔗 grep 
The grep command in Linux is used to search for patterns in text files.
ex-> grep INFO app.log
grep -i info app.log
grep -i -c info app.log
ps aux | grep ubantu
ps aux | grep ubantu | awk '{print $2}'


Linux Volume management
